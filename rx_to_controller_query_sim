`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 25.08.2022 10:34:57
// Design Name: 
// Module Name: rx_tb
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// module rx (reset, clk, demodin, bitout, bitclk, rx_overflow_reset, trcal,
//rngbitout);
//////////////////////////////////////////////////////////////////////////////////
module rxpackcmd_tb();
    //inputs
    reg reset, clk, demodin;
    reg use_uid, use_q, comm_enable;
    //outputs
    wire [1:0] bitsrcselect;
    wire [1:0] m_in;
    wire dr_in, trext_in, tx_en, rx_en;
    
    //reg [1992:0] bitall;
    reg [1800:0] bitall;
    integer k = 0;
    
//module top(reset, clk, demodin, bitsrcselect,
//           m_in, dr_in, trext_in, tx_en, rx_en,
//            use_uid, use_q, comm_enable);
    top tp(.reset(reset), .clk(clk), .demodin(demodin), 
           .bitsrcselect(bitsrcselect), .m_in(m_in), .dr_in(dr_in),
           .trext_in(trext_in), .tx_en(tx_en), .rx_en(rx_en), 
           .use_uid(use_uid), .use_q(use_q), .comm_enable(comm_enable));
         
    initial begin
        reset = 1;
        clk = 0;
        demodin = 1;
        #0.1
        reset = 0;
        #38.89
        demodin = 1;
        

        end
    
    always #0.01 clk = ~clk; //2.5MHz clock frequency, bit rate

    initial begin
       //bitall = 1993'b
       bitall = 1801'b
       
       use_uid = 0;
       use_q = 0;
       comm_enable = 1;
    end


    always@(posedge clk && !reset) begin
        k = k+1;
        
        //if(k <= 1993) begin
        if(k <= 1801) begin
        bitall <= bitall >> 1;
        demodin = bitall;
        end
        else demodin <= 1;
        
    end


endmodule
