
// Generated by Cadence Genus(TM) Synthesis Solution 20.10-p001_1
// Generated on: Jun  9 2023 22:30:50 IST (Jun  9 2023 17:00:50 UTC)

// Verification Directory fv/mem_always_on 

module mem_always_on(rx_cmd_4, rx_cmd_8, rx_cmd_10, rx_cmd_11,
     packet_complete, tx_enable, ADC_data_ready, clk, factory_reset,
     current_inven_flag_in, current_sl_flag_in, Code1_in,
     Counter_EPC_in, Counter_s1_in, Counter_s2_in, Counter_EPC_out,
     Counter_s1_out, Counter_s2_out, current_inven_flag_out,
     current_sl_flag_out, Code1_out);
  input rx_cmd_4, rx_cmd_8, rx_cmd_10, rx_cmd_11, packet_complete,
       tx_enable, ADC_data_ready, clk, factory_reset,
       current_inven_flag_in, current_sl_flag_in;
  input [15:0] Code1_in;
  input [5:0] Counter_EPC_in, Counter_s1_in, Counter_s2_in;
  output [5:0] Counter_EPC_out, Counter_s1_out, Counter_s2_out;
  output current_inven_flag_out, current_sl_flag_out;
  output [15:0] Code1_out;
  wire rx_cmd_4, rx_cmd_8, rx_cmd_10, rx_cmd_11, packet_complete,
       tx_enable, ADC_data_ready, clk, factory_reset,
       current_inven_flag_in, current_sl_flag_in;
  wire [15:0] Code1_in;
  wire [5:0] Counter_EPC_in, Counter_s1_in, Counter_s2_in;
  wire [5:0] Counter_EPC_out, Counter_s1_out, Counter_s2_out;
  wire current_inven_flag_out, current_sl_flag_out;
  wire [15:0] Code1_out;
  wire in_flag, n_0, n_1, n_2, n_3, n_4, n_5, n_6;
  wire n_7, n_8, n_9, n_10, n_11, n_12, n_13;
  EDFKCNQD1BWP7T \Counter_EPC_reg[0] (.CP (clk), .CN (n_13), .D
       (Counter_EPC_in[0]), .E (n_12), .Q (Counter_EPC_out[0]));
  EDFKCNQD1BWP7T \Counter_EPC_reg[1] (.CP (clk), .CN (n_13), .D
       (Counter_EPC_in[1]), .E (n_12), .Q (Counter_EPC_out[1]));
  EDFKCNQD1BWP7T \Counter_EPC_reg[2] (.CP (clk), .CN (n_13), .D
       (Counter_EPC_in[2]), .E (n_12), .Q (Counter_EPC_out[2]));
  EDFKCNQD1BWP7T \Counter_EPC_reg[3] (.CP (clk), .CN (n_13), .D
       (Counter_EPC_in[3]), .E (n_12), .Q (Counter_EPC_out[3]));
  EDFKCNQD1BWP7T \Counter_EPC_reg[4] (.CP (clk), .CN (n_13), .D
       (Counter_EPC_in[4]), .E (n_12), .Q (Counter_EPC_out[4]));
  EDFKCNQD1BWP7T \Counter_EPC_reg[5] (.CP (clk), .CN (n_13), .D
       (Counter_EPC_in[5]), .E (n_12), .Q (Counter_EPC_out[5]));
  EDFKCNQD1BWP7T \Code1_reg[7] (.CP (clk), .CN (n_13), .D
       (Code1_in[7]), .E (n_11), .Q (Code1_out[7]));
  EDFKCNQD1BWP7T \Code1_reg[0] (.CP (clk), .CN (n_13), .D
       (Code1_in[0]), .E (n_11), .Q (Code1_out[0]));
  EDFKCNQD1BWP7T \Code1_reg[12] (.CP (clk), .CN (n_13), .D
       (Code1_in[12]), .E (n_11), .Q (Code1_out[12]));
  EDFKCNQD1BWP7T \Code1_reg[13] (.CP (clk), .CN (n_13), .D
       (Code1_in[13]), .E (n_11), .Q (Code1_out[13]));
  EDFKCNQD1BWP7T \Code1_reg[14] (.CP (clk), .CN (n_13), .D
       (Code1_in[14]), .E (n_11), .Q (Code1_out[14]));
  EDFKCNQD1BWP7T \Code1_reg[4] (.CP (clk), .CN (n_13), .D
       (Code1_in[4]), .E (n_11), .Q (Code1_out[4]));
  EDFKCNQD1BWP7T \Code1_reg[1] (.CP (clk), .CN (n_13), .D
       (Code1_in[1]), .E (n_11), .Q (Code1_out[1]));
  EDFKCNQD1BWP7T \Code1_reg[2] (.CP (clk), .CN (n_13), .D
       (Code1_in[2]), .E (n_11), .Q (Code1_out[2]));
  EDFKCNQD1BWP7T \Code1_reg[3] (.CP (clk), .CN (n_13), .D
       (Code1_in[3]), .E (n_11), .Q (Code1_out[3]));
  EDFKCNQD1BWP7T \Code1_reg[15] (.CP (clk), .CN (n_13), .D
       (Code1_in[15]), .E (n_11), .Q (Code1_out[15]));
  EDFKCNQD1BWP7T \Code1_reg[5] (.CP (clk), .CN (n_13), .D
       (Code1_in[5]), .E (n_11), .Q (Code1_out[5]));
  EDFKCNQD1BWP7T \Code1_reg[6] (.CP (clk), .CN (n_13), .D
       (Code1_in[6]), .E (n_11), .Q (Code1_out[6]));
  EDFKCNQD1BWP7T \Code1_reg[11] (.CP (clk), .CN (n_13), .D
       (Code1_in[11]), .E (n_11), .Q (Code1_out[11]));
  EDFKCNQD1BWP7T \Code1_reg[10] (.CP (clk), .CN (n_13), .D
       (Code1_in[10]), .E (n_11), .Q (Code1_out[10]));
  EDFKCNQD1BWP7T \Counter_s2_reg[2] (.CP (clk), .CN (n_13), .D
       (Counter_s2_in[2]), .E (n_10), .Q (Counter_s2_out[2]));
  EDFKCNQD1BWP7T \Code1_reg[9] (.CP (clk), .CN (n_13), .D
       (Code1_in[9]), .E (n_11), .Q (Code1_out[9]));
  EDFKCNQD1BWP7T \Counter_s2_reg[3] (.CP (clk), .CN (n_13), .D
       (Counter_s2_in[3]), .E (n_10), .Q (Counter_s2_out[3]));
  EDFKCNQD1BWP7T \Counter_s2_reg[4] (.CP (clk), .CN (n_13), .D
       (Counter_s2_in[4]), .E (n_10), .Q (Counter_s2_out[4]));
  EDFKCNQD1BWP7T \Counter_s2_reg[5] (.CP (clk), .CN (n_13), .D
       (Counter_s2_in[5]), .E (n_10), .Q (Counter_s2_out[5]));
  EDFKCNQD1BWP7T \Counter_s1_reg[0] (.CP (clk), .CN (n_13), .D
       (Counter_s1_in[0]), .E (n_10), .Q (Counter_s1_out[0]));
  EDFKCNQD1BWP7T \Counter_s1_reg[1] (.CP (clk), .CN (n_13), .D
       (Counter_s1_in[1]), .E (n_10), .Q (Counter_s1_out[1]));
  EDFKCNQD1BWP7T \Counter_s1_reg[2] (.CP (clk), .CN (n_13), .D
       (Counter_s1_in[2]), .E (n_10), .Q (Counter_s1_out[2]));
  EDFKCNQD1BWP7T \Counter_s1_reg[3] (.CP (clk), .CN (n_13), .D
       (Counter_s1_in[3]), .E (n_10), .Q (Counter_s1_out[3]));
  EDFKCNQD1BWP7T \Counter_s1_reg[4] (.CP (clk), .CN (n_13), .D
       (Counter_s1_in[4]), .E (n_10), .Q (Counter_s1_out[4]));
  EDFKCNQD1BWP7T \Counter_s1_reg[5] (.CP (clk), .CN (n_13), .D
       (Counter_s1_in[5]), .E (n_10), .Q (Counter_s1_out[5]));
  EDFKCNQD1BWP7T \Counter_s2_reg[0] (.CP (clk), .CN (n_13), .D
       (Counter_s2_in[0]), .E (n_10), .Q (Counter_s2_out[0]));
  EDFKCNQD1BWP7T \Counter_s2_reg[1] (.CP (clk), .CN (n_13), .D
       (Counter_s2_in[1]), .E (n_10), .Q (Counter_s2_out[1]));
  EDFKCNQD1BWP7T \Code1_reg[8] (.CP (clk), .CN (n_13), .D
       (Code1_in[8]), .E (n_11), .Q (Code1_out[8]));
  DFQD1BWP7T current_inven_flag_reg(.CP (clk), .D (n_8), .Q
       (current_inven_flag_out));
  DFKCNQD1BWP7T in_flag_reg(.CP (clk), .CN (n_13), .D (n_5), .Q
       (in_flag));
  DFQD1BWP7T current_sl_flag_reg(.CP (clk), .D (n_9), .Q
       (current_sl_flag_out));
  AO221D0BWP7T g626(.A1 (n_7), .A2 (current_sl_flag_in), .B1
       (current_sl_flag_out), .B2 (n_6), .C (factory_reset), .Z (n_9));
  AO221D0BWP7T g627(.A1 (n_7), .A2 (current_inven_flag_in), .B1
       (current_inven_flag_out), .B2 (n_6), .C (factory_reset), .Z
       (n_8));
  AOI21D0BWP7T g628(.A1 (n_4), .A2 (packet_complete), .B (n_0), .ZN
       (n_12));
  NR2D1BWP7T g629(.A1 (n_4), .A2 (rx_cmd_8), .ZN (n_5));
  OAI21D0BWP7T g631(.A1 (n_3), .A2 (tx_enable), .B (n_1), .ZN (n_10));
  NR3D0BWP7T g625(.A1 (n_2), .A2 (Counter_EPC_out[4]), .A3
       (Counter_EPC_out[5]), .ZN (n_11));
  IND2D1BWP7T g632(.A1 (n_3), .B1 (tx_enable), .ZN (n_4));
  IIND4D0BWP7T g630(.A1 (Counter_EPC_out[3]), .A2 (Counter_EPC_out[2]),
       .B1 (Counter_EPC_out[1]), .B2 (Counter_EPC_out[0]), .ZN (n_2));
  ND3D0BWP7T g633(.A1 (packet_complete), .A2 (rx_cmd_10), .A3
       (ADC_data_ready), .ZN (n_1));
  INVD0BWP7T g635(.I (n_6), .ZN (n_7));
  NR2D1BWP7T g634(.A1 (in_flag), .A2 (rx_cmd_11), .ZN (n_3));
  ND2D1BWP7T g636(.A1 (rx_cmd_4), .A2 (packet_complete), .ZN (n_6));
  INVD1BWP7T g637(.I (rx_cmd_8), .ZN (n_0));
  INVD1BWP7T g638(.I (factory_reset), .ZN (n_13));
endmodule
